name: Orchestrator_Workflow_Reusable

on: workflow_dispatch


jobs:
  # ------- Main Orchestration  ---------------
  
  IaC:
    uses: ./.github/workflows/reusable-workflow.yml
    with:
      templateLocation: ./IaC/azuredeploy.json
      parametersLocation: ./IaC/azuredeploy.parameters.json
    secrets: 
      rgName: ${{ secrets.AZURE_RG }}
      azureCredentials: ${{ secrets.AZURE_CREDENTIALS_SUPER_SP }}
      azureSubs: ${{ secrets.AZURE_SUBSCRIPTION }}
  
  Test-AKS:
    runs-on: ubuntu-latest
    if: ${{ success() }}
    needs: IaC
    steps:   
    - name: Azure CLI script
      uses: azure/CLI@v1
      with:
        azcliversion: 2.16.0
        inlineScript: |
           az login --service-principal -u ${{ secrets.CLIENTID }} -p ${{ secrets.CLIENTSECRET }} --tenant ${{ secrets.TENANTID }}
           az aks get-credentials --name ${{ secrets.CLUSTER_NAME }} --resource-group ${{ secrets.AZURE_RG }}
    
  Config-ACR-and-AKS:
    if: ${{ success() }}
    needs: Test-AKS
    uses: ./.github/workflows/reusable-workflow.yml
    secrets: 
      clusterName: ${{ secrets.CLUSTER_NAME }}
      azureCredentials: ${{ secrets.AZURE_CREDENTIALS_SUPER_SP }}
      acrName: ${{ secrets.ACR_NAME }}
      rgName: ${{ secrets.AZURE_RG }}
  
  
  Deploy-Microservice:
    if: ${{ success() }}
    needs: Config-ACR-and-AKS
    uses: ./.github/workflows/reusable-workflow.yml
    with:
      parametersNamespace: api
      ymlLocation: yaml_files/deploy-microservice.yaml
    secrets: 
      rgName: ${{ secrets.AZURE_RG }}
      azureCredentials: ${{ secrets.AZURE_CREDENTIALS_SUPER_SP }}
      clusterName: ${{ secrets.CLUSTER_NAME }}
      
  Enable-HPA:
    if: ${{ success() }}
    needs: Deploy-Microservice
    uses: ./.github/workflows/reusable-workflow.yml
    with:
      parametersNamespace: api
      ymlLocation: yaml_files/hpa-api.yaml
    secrets: 
      rgName: ${{ secrets.AZURE_RG }}
      azureCredentials: ${{ secrets.AZURE_CREDENTIALS_SUPER_SP }}
      clusterName: ${{ secrets.CLUSTER_NAME }}
  
  Demo-Environment-Ready:
    runs-on: ubuntu-latest
    if: ${{ success() }}
    needs: Enable-HPA
    steps:
      - name: Demo Environment Ready
        uses: oaviles/javascript_action@v1.1
        with:
          message: 'Demo Environment Ready'
  
          
  # ------ Main Orchestration End ---------
  
  # ------- Issue Orchestration ----------
  
  Create-Issue-AKS-IaC:
    if: ${{ failure() }}
    needs: [IaC]
    runs-on: ubuntu-latest
    steps:
      - name: Fail AKS Provisioning
        uses: oaviles/javascript_action@v1.1
        with:
          message: 'Fail AKS Provisioning'
          
  Create-Issue-AKS-Validation:
    if: ${{ failure() }}
    needs: Test-AKS
    runs-on: ubuntu-latest
    steps:
      - name: Test AKS
        uses: oaviles/javascript_action@v1.1
        with:
          message: 'Test AKS'
          
  Create-Issue-ACR-Validation:
    if: ${{ failure() }}
    needs: Config-ACR-and-AKS
    runs-on: ubuntu-latest
    steps:
      - name: ACR Validation
        uses: oaviles/javascript_action@v1.1
        with:
          message: 'ACR Validation'
          
  Create-Issue-Deploy-Microservice:
    if: ${{ failure() }}
    needs: Deploy-Microservice
    runs-on: ubuntu-latest
    steps:
      - name: Deploy Microservice
        uses: oaviles/javascript_action@v1.1
        with:
          message: 'Deploy Microservice'
          
  Create-Issue-Enable-HPA:
    if: ${{ failure() }}
    needs: Enable-HPA
    runs-on: ubuntu-latest
    steps:
      - name: Enable HPA
        uses: oaviles/javascript_action@v1.1
        with:
          message: 'Enable HPA'
  
                    
   # ------- Issue Orchestration End ----------
